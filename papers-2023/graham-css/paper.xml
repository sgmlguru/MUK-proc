<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="resources/css/paper.css"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0">
	<info>
		<title>Markup UK Proceedings as CSS</title>
		<author>
			<personname>Tony Graham</personname>
			<email>tgraham@antenna.co.jp</email>
			<uri>https://www.antennahouse.com</uri>
			<personblurb>
				<para>Tony Graham is a Senior Architect with Antenna House, where he works on their XSL-FO and CSS formatter, cloud-based authoring solution, and related products. He also provides XSL-FO and XSLT consulting and training services on behalf of Antenna House.</para>
				<para>Tony has been working with markup since 1991, with XML since 1996, and with XSLT/XSL-FO since 1998. He was previously an invited expert on the W3C XML Print and Page Layout Working Group (XPPL) defining the XSL-FO specification, as well as an acknowledged expert in XSLT. Tony is the developer of the 'stf' Schematron testing framework and also Antenna House's 'focheck' XSL-FO validation tool, a committer to both the XSpec and Juxy XSLT testing frameworks, the author of "Unicode: A Primer", and a qualified trainer.</para>
			</personblurb>
			<affiliation>
				<jobtitle>Senior Architect</jobtitle>
				<orgname>Antenna House</orgname>
				<orgdiv>XML Division</orgdiv>
			</affiliation>
		</author>
		<keywordset>
			<keyword>XSL-FO</keyword>
			<keyword>DocBook</keyword>
		</keywordset>
		<abstract><para>Markup UK  conference proceedings start life as DocBook XML markup and are formatted as PDF using XSL-FO
				that is generated by the DocBook XSLT 1.0 stylesheets.</para>
			<para>This paper discusses formatting the conference proceedings using CSS styles
			from the DocBook <quote>xslTNG</quote> XSLT 3.0 stylesheets.</para>
		</abstract>
	</info>
	<para>As explained in <citetitle>We’re Not Looking to go to Print</citetitle> <biblioref linkend="graham2021"/>, the 2018 and 2019 proceedings used almost stock XSLT 1.0 stylesheets to generate XSL-FO that was formatted using Antenna House Formatter, and the styles were then revised for Markup UK 2021 (and later) by using a more substantive customisation of the XSLT 1.0 stylesheets. Recreating the proceedings using CSS styles was an experiment in using CSS to format DocBook and, as it turned out, the first real test for using the DocBook xslTNG stylesheets to generate PDF.</para>
	<para>As expected, it is possible to make the CSS version virtually identical to the existing XSL-FO version of a paper.<footnote><para>For an in-depth analysis of the similarities and differences between CSS and XSL-FO, see the <citetitle>XSL-FO/CSS Comparison</citetitle> available from <uri>https://www.antennahouse.com/xsl-fo-css-comparison</uri>.</para></footnote></para>
	<figure>
		<title>Paper formatted using CSS (left) and XSL-FO (right)</title>
		<mediaobject>
			<imageobject>
				<imagedata fileref="img/side-by-side.png" width="100%" />
			</imageobject>
		</mediaobject>
	</figure>
	<section>
		<title>DocBook</title>
		<para>DocBook is <quote>a schema (available in several languages including RELAX NG, SGML and XML DTDs, and W3C XML Schema) maintained by the DocBook Technical Committee of OASIS. It is particularly well suited to books and papers about computer hardware and software (though it is by no means limited to these applications).</quote> <biblioref linkend="docbook"/> It has been under development since 1991, when it began as an SGML DTD for document interchange between HaL Computer Systems and O’Reilly &amp; Associates. It was further developed and expanded by the Davenport Group before being taken on by the DocBook Technical Committee of OASIS in 1998.</para>
		<para>As it is the best-known standard schema for technical documentation, DocBook or DocBook customisations are used for the proceedings of the Markup UK, XML Prague, and Balisage conferences.</para>
	</section>
	<section>
		<title>DocBook Stylesheets</title>
		<para>DocBook documents, as they are (usually) technical documents, are meant for human consumption. Companies developed their own tools for formatting DocBook<footnote><para>I was formatting DocBook SGML into PostScript in the early 1990s.</para></footnote>, then as successive stylesheet standards became available, open source stylesheets for formatting or transforming DocBook were made available by Norman Tovey-Walsh. The original DSSSL stylesheets <biblioref linkend="docbookdsssl"/> are no longer maintained; the XSLT 1.0 stylesheets are widely used and are actively maintained<footnote><para>At the time of this writing, the GitHub repository lists 6,942 commits.</para></footnote> by Bob Stayton <biblioref linkend="docbookxsl"/> and others; the XSLT 2.0 stylesheets were never as ubiquitous as the XSLT 1.0 stylesheets, and their development was discontinued in July 2020 in favour of the XSLT 3.0 stylesheets. The <quote>xslTNG</quote> XSLT 3.0 stylesheets do not yet have the same user base or the same number of contributors as the XSLT 1.0 stylesheets, but the XSLT 1.0 stylesheets had a 16-year head start.</para>
	</section>
	<section>
		<title>Comparing XSLT 1.0 and xslTNG Stylesheets</title>
		<section>
			<title>Localisation</title>
			<para>The XSLT 1.0 stylesheets have localisations for generated text in over 70 languages. The xslTNG stylesheets reuse the localisation data to support the same languages.</para>
		</section>
		<section>
			<title>Build system</title>
			<para>The XSLT 1.0 stylesheets use Apache Ant to run all stages of generating output from DocBook, whereas the xslTNG stylesheets (following from the XSLT 2.0 stylesheets) uses Gradle to build and package the XSLT and other files that you use, and the xslTNG release that you build or download is run using either Java or Python. Recent releases also include an experimental Docker file so that you can make a Docker image for running the xslTNG stylesheets.</para>
		</section>
		<section>
			<title>Syntax highlighting</title>
			<para>The XSLT 1.0 stylesheets use XSLTHL <biblioref linkend="xslthl"/>, which is an extension function implemented for multiple XSLT processors and which uses XML data files. However, as noted in <biblioref linkend="graham2021"/>, XSLTHL development has stalled and new languages are rarely added. The xslTNG stylesheets use Pygments, which is an external Python program but which covers a large number of languages and which is still actively developed.</para>
		</section>
		<section>
			<title>XSLT debugging</title>
			<para>XSLT debugging is not always straightforward with either the XSLT 1.0 stylesheets or the xslTNG stylesheets. The XSLT 1.0 stylesheets can preprocess a document to either strip or add namespaces, depending on the document and the stylesheet being run, which makes it meaningless to try to get an XSLT debugger to break when a source node is processed because every node is preprocessed. The xslTNG stylesheets make multiple passes over the document to, for example, convert a DocBook 4 document into DocBook 5 and normalise titles to be contained in <code>&lt;info></code> elements. The xslTNG stylesheets make extensive use of <code>xsl:evaluate</code>, so it is not always possible to set a break point on the source node to be processed by a particular template.</para>
			<para>With both the XSLT 1.0 stylesheets and the xslTNG stylesheets, the first advice is to add <code>xsl:message</code> messages or to generate comments or literal text that will show up in the result to indicate that a particular template was used. The xslTNG stylesheets support an <code>org.docbook.xsltng.verbose</code> Java system property to control debugging messages output by the extension functions.</para>
		</section>
		<section>
			<title>Cover pages</title>
			<para>The XSLT 1.0 stylesheets have an extensive mechanism for generating front and back covers, inside cover pages, etc. The xslTNG 2.1.4 stylesheets can be customised to generate cover pages and other front matter as part of the titlepage processing for a <code>book</code>, etc. The xslTNG 2.1.4 stylesheets support an <code>m:back-cover</code> mode that can be used to generate a back cover. Support for generating front and back covers is likely to be further developed in future releases.</para>
		</section>
		<section>
			<title>PDF bookmarks</title>
			<para>Both the XSLT 1.0 stylesheets and the xslTNG stylesheets can generate PDFs containing bookmarks.</para>
		</section>
	</section>
	<section>
		<title>Current status</title>
		<para>The xslTNG stylesheets are a moving target. When this work started, the current release was 2.1.2. At the time of this writing, it is now 2.1.4, and by the time that you read this, the stylesheets will be further updated.</para>
		<para>The stylesheets for generating paged media output were less well exercised than the stylesheets for producing web pages. The paged media stylesheets have been improved in response to issues raised while developing the CSS customisation. There are still some open issues, and it is likely that paged media support will be further improved shortly.</para>
		<para>There was not much time available for developing the CSS customisation, and it is still a work in progress. The code is
			available in the <code>css-proc</code> branch on GitHub <biblioref linkend="MUK-xsl" /> for anyone to copy and
			modify. Comments and pull requests are welcome.</para>
	</section>
	<section>
		<title>Acknowledgements</title>
		<para>Norman Tovey-Walsh is developing the xslTNG stylesheets that are the subject of this paper. He made numerous improvements in response to issues raised, often with very quick turnaround.</para>
	</section>
	<bibliography xml:id="graham-css-references">
		<bibliomixed xml:id="docbook"> <abbrev>DOCBOOK</abbrev> <author>
			<orgname>docbook.org</orgname>
		</author>: <title>What is DocBook?</title>. <bibliomisc><link
			xl:href="https://docbook.org/whatis" /></bibliomisc></bibliomixed>
		<bibliomixed xml:id="docbookdsssl"> <abbrev>DOCBOOKDSSSL</abbrev> <author>
			<personname><surname>Walsh</surname><firstname>Norman</firstname></personname>
		</author>: <title>README for the DocBook Stylesheets</title>. <bibliomisc><link
			xl:href="https://github.com/docbook/dsssl/blob/master/README.adoc" /></bibliomisc></bibliomixed>
		<bibliomixed xml:id="docbookxsl"> <abbrev>DOCBOOK-XSL</abbrev> <author>
			<personname><surname>Stayton</surname><firstname>Bob</firstname></personname>
		</author>: <title>DocBook XSL: The Complete Guide</title>. <edition>Fourth Edition</edition>, <date>September 2007</date>, <orgname>OASIS</orgname>. <bibliomisc><link
			xl:href="http://www.sagehill.net/docbookxsl/index.html" /></bibliomisc></bibliomixed>
		<bibliomixed xml:id="graham2021"> <abbrev>GRAHAM2021</abbrev> <title><quote>We’re Not Looking to go to Print</quote></title>. <orgname>Antenna House</orgname>. <bibliomisc><link
			xl:href="https://markupuk.org/2021/webhelp/index.html#ar10.html" /></bibliomisc></bibliomixed>
		<bibliomixed xml:id="MUK-docbook"> <abbrev>MUK-docbook</abbrev> <author>
			<orgname>Markup UK</orgname>
		</author>: <title>‘MUK_docbook’ add-on Oxygen framework</title>, <orgname>Markup
			UK</orgname> <bibliomisc><link xl:href="https://github.com/MarkupUK/paperFramework"
			 /></bibliomisc></bibliomixed>
		<bibliomixed xml:id="MUK-xsl"> <abbrev>MUK-xsl</abbrev> <author>
			<orgname>Markup UK</orgname>
		</author>: <title>XSL stylesheets for Markup UK proceedings</title>, <orgname>Markup
			UK</orgname> <bibliomisc><link xl:href="https://github.com/MarkupUK/MUK-xsl"
			/></bibliomisc></bibliomixed>
		<bibliomixed xml:id="xslt10-stylesheets"> <abbrev>XSLT10-STYLESHEETS</abbrev> <author>
			<orgname>DocBook</orgname>
		</author>: <title>DocBook XSLT 1.0 Stylesheets</title>, <orgname>DocBook</orgname> <bibliomisc><link xl:href="https://github.com/docbook/xslt10-stylesheets"
			/></bibliomisc></bibliomixed>
		<bibliomixed xml:id="xslthl"> <abbrev>XSLTHL</abbrev> <author>
			<personname><surname>Molhanec</surname> <firstname>Michal</firstname></personname>
		</author>, <author><personname><surname>Kosek</surname> <firstname>Jirka</firstname></personname></author>, <author><personname><surname>Hendriks</surname> <firstname>Michiel</firstname></personname></author>: <title>XSLT syntax highlighting</title>, <bibliomisc><link xl:href="https://github.com/xmlark/xslthl"
		/></bibliomisc></bibliomixed>
	</bibliography>
</article>
